{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChangeForm","event","target","value","setState","handleSubmitForm","preventDefault","onSubmit","props","id","uuidv4","reset","this","className","s","form","label","type","onChange","pattern","title","required","input","btn","Component","ContactList","contacts","onRemove","length","list","map","contact","listItem","onClick","ContactListItem","Filter","App","filter","handleAddContact","newContact","handleUniqueContact","prevState","alert","find","handleChangeFilter","e","getVisibleContacts","normalizedFilter","toLowerCase","includes","handleRemoveContact","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a466535.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3kJEh\",\"input\":\"Filter_input__2S-j7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__N4_tt\",\"label\":\"ContactForm_label__2gsWJ\",\"input\":\"ContactForm_input__3V4_S\",\"btn\":\"ContactForm_btn__1x66X\"};","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport s from \"./ContactForm.module.css\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = INITIAL_STATE;\n\n  handleChangeForm = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n    // console.log(\"name\", name, \"-----\", \"value\", value);\n  };\n\n  handleSubmitForm = (event) => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const { onSubmit } = this.props;\n\n    onSubmit({ id: uuidv4(), name, number });\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmitForm} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChangeForm}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            className={s.input}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChangeForm}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр, может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            className={s.input}\n          />\n        </label>\n        <button className={s.btn}>Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\n\nimport s from \"./ContactList.module.css\";\n\nconst ContactListItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li key={id} className={s.listItem}>\n      <span className={s.name}>{name}: </span>\n      <span className={s.number}>{number}</span>\n      <button onClick={() => onRemove(id)} className={s.btn}>\n        Deleted\n      </button>\n    </li>\n  );\n};\n\nconst ContactList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => ContactListItem({ ...contact, onRemove }))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\n\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport ContactForm from \"./Components/ContactForm\";\nimport ContactList from \"./Components/ContactList\";\nimport Filter from \"./Components/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  handleAddContact = (newContact) => {\n    // console.log(newContact);\n    const uniqueContact = this.handleUniqueContact(newContact);\n    if (!uniqueContact) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    this.setState((prevState) => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  handleUniqueContact = (newContact) => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n    return !isExistContact;\n    // console.log(isExistContact);\n  };\n\n  handleChangeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n    // console.log(e);\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) => {\n      // console.log(contact.name);\n      return contact.name.toLowerCase().includes(normalizedFilter);\n    });\n  };\n\n  handleRemoveContact = (id) =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    }));\n\n  componentDidMount() {\n    // console.log(\"componentDidMount\");\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    // console.log(contacts);\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(\"componentDidUpdate\");\n    // console.log(prevProps);\n    if (this.state.contacts !== prevState.contacts) {\n      // console.log(\"Изменился стейт\");\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n    // console.log(prevState);\n    // console.log(this.state);\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className=\"contaiter\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handleAddContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.handleChangeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__3ZC-H\",\"number\":\"ContactList_number__3D_l4\",\"btn\":\"ContactList_btn__2WDve\"};"],"sourceRoot":""}